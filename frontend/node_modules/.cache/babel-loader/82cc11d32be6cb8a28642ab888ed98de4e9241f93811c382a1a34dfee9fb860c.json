{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const userData = {\n      email: email.trim(),\n      password: password.trim()\n    };\n    const response = await fetch('http://127.0.0.1:3002/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n\n    // Handle unsuccessful sign up\n    if (!response.ok) {\n      const errorData = await response.json();\n      setIsLoading(false);\n      setError(errorData.errorMessage || 'Unknown server error. Please try again later.');\n    }\n\n    // Handle successful sign up\n    if (response.ok) {\n      const json = await response.json();\n\n      // Save the use to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n      // Update auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","userData","trim","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","errorMessage","localStorage","setItem","type","payload"],"sources":["/Users/lukethompson/Documents/Blogger/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\n\nexport const useLogin = () => {\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(null);\n    const { dispatch } = useAuthContext();\n    const login = async(email, password) => {\n        setIsLoading(true);\n        setError(null);\n        \n        const userData = {\n            email: email.trim(),\n            password: password.trim()\n        };\n\n        const response = await fetch('http://127.0.0.1:3002/user/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n        });\n\n        // Handle unsuccessful sign up\n        if (!response.ok) {\n            const errorData = await response.json();\n            setIsLoading(false);\n            setError(errorData.errorMessage || 'Unknown server error. Please try again later.');\n            \n        }\n\n        // Handle successful sign up\n        if (response.ok) {\n            const json = await response.json();\n            \n            // Save the use to local storage\n            localStorage.setItem('user', JSON.stringify(json));\n            // Update auth context\n            dispatch({type: 'LOGIN', payload: json});\n        \n            setIsLoading(false);\n        }\n    }\n\n    return { login, isLoading, error };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EACrC,MAAMQ,KAAK,GAAG,MAAAA,CAAMC,KAAK,EAAEC,QAAQ,KAAK;IACpCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG;MACbF,KAAK,EAAEA,KAAK,CAACG,IAAI,CAAC,CAAC;MACnBF,QAAQ,EAAEA,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;IAC7B,CAAC,CAAC;;IAEF;IACA,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvChB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACiB,SAAS,CAACE,YAAY,IAAI,+CAA+C,CAAC;IAEvF;;IAEA;IACA,IAAIV,QAAQ,CAACO,EAAE,EAAE;MACb,MAAME,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAElC;MACAE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;MAClD;MACAf,QAAQ,CAAC;QAACmB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MAExChB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACtC,CAAC;AAACD,EAAA,CA3CWD,QAAQ;EAAA,QAGID,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}