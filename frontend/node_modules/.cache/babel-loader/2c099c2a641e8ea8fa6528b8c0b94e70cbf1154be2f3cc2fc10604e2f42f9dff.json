{"ast":null,"code":"const useSignUp = async (username, email, password) => {\n  // Request sign up from server\n  try {\n    const userData = {\n      username: username,\n      password: password,\n      email: email\n    };\n    const response = await fetch('http://127.0.0.1:3002/signup/request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      // If response status is not OK, extract error message from response body\n      const errorData = await response.json();\n      throw new Error(errorData.errorMessage || 'Unknown server error. Please try again later.');\n    }\n    const responseData = await response.json();\n    const userId = responseData.user_id;\n\n    // Handle successful sign-up\n  } catch (error) {\n    // If sign up fails, show the user the error message\n    throw error.message;\n  }\n};\nexport default useSignUp;","map":{"version":3,"names":["useSignUp","username","email","password","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","errorMessage","responseData","userId","user_id","error","message"],"sources":["/Users/lukethompson/Documents/Blogger/blog/src/hooks/useSignUp.js"],"sourcesContent":["\nconst useSignUp = async (username, email, password) => {\n     // Request sign up from server\n     try {\n        const userData = {\n            username: username,\n            password: password,\n            email: email\n        };\n\n        const response = await fetch('http://127.0.0.1:3002/signup/request', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n        });\n\n        if (!response.ok) {\n            // If response status is not OK, extract error message from response body\n            const errorData = await response.json();\n            throw new Error(errorData.errorMessage || 'Unknown server error. Please try again later.');\n        }\n\n        const responseData = await response.json();\n        const userId = responseData.user_id;\n\n        // Handle successful sign-up\n     \n    } catch (error) {\n        // If sign up fails, show the user the error message\n        throw error.message;\n    }\n};\n\nexport default useSignUp"],"mappings":"AACA,MAAMA,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAClD;EACA,IAAI;IACD,MAAMC,QAAQ,GAAG;MACbH,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA,QAAQ;MAClBD,KAAK,EAAEA;IACX,CAAC;IAED,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd;MACA,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,YAAY,IAAI,+CAA+C,CAAC;IAC9F;IAEA,MAAMC,YAAY,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC1C,MAAMI,MAAM,GAAGD,YAAY,CAACE,OAAO;;IAEnC;EAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ;IACA,MAAMA,KAAK,CAACC,OAAO;EACvB;AACJ,CAAC;AAED,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}