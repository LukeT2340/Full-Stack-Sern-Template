{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const Cart = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const addToCart = async (productId, quantity) => {\n    setIsLoading(true);\n    setError(null);\n    const userJson = localStorage.getItem('user');\n    const user = JSON.parse(userJson);\n    const token = user.token;\n    try {\n      const response = await fetch('http://192.168.1.145:3002/cart/add', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          product_id: productId,\n          quantity: quantity\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.errorMessage || 'Unknown server error. Please try again later.');\n      }\n      if (response.ok) {\n        setIsSuccess(true);\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    addToCart,\n    isLoading,\n    isSuccess,\n    error\n  };\n};\n_s(Cart, \"m0cMT/NW5FHkYkF1DmklOcdXNPs=\");\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["useState","Cart","_s","error","setError","isLoading","setIsLoading","isSuccess","setIsSuccess","addToCart","productId","quantity","userJson","localStorage","getItem","user","JSON","parse","token","response","fetch","method","headers","body","stringify","product_id","ok","errorData","json","Error","errorMessage","message","_c","$RefreshReg$"],"sources":["/Users/lukethompson/Documents/FullStackProject/frontend/src/hooks/PostCart.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const Cart = () => {\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false); \n    const [isSuccess, setIsSuccess] = useState(false);\n\n    const addToCart = async (productId, quantity) => {\n        setIsLoading(true);\n        setError(null);\n        const userJson = localStorage.getItem('user');\n        const user = JSON.parse(userJson);\n        const token = user.token;\n        \n        try {\n            const response = await fetch('http://192.168.1.145:3002/cart/add', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(\n                    {\n                        product_id: productId,\n                        quantity: quantity\n                    }\n                )\n                });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.errorMessage || 'Unknown server error. Please try again later.');\n            }\n\n            if (response.ok) {\n                setIsSuccess(true);\n            }\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return { addToCart, isLoading, isSuccess, error };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,SAAS,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,KAAK;IAC7CL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMQ,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;IACjC,MAAMM,KAAK,GAAGH,IAAI,CAACG,KAAK;IAExB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,eAAe,EAAG,UAASJ,KAAM,EAAC;UAClC,cAAc,EAAE;QACpB,CAAC;QACDK,IAAI,EAAEP,IAAI,CAACQ,SAAS,CAChB;UACIC,UAAU,EAAEf,SAAS;UACrBC,QAAQ,EAAEA;QACd,CACJ;MACA,CAAC,CAAC;MAEN,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,YAAY,IAAI,+CAA+C,CAAC;MAC9F;MAEA,IAAIX,QAAQ,CAACO,EAAE,EAAE;QACblB,YAAY,CAAC,IAAI,CAAC;MACtB;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAAC4B,OAAO,CAAC;IAC3B,CAAC,SAAS;MACNzB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEG,SAAS;IAAEJ,SAAS;IAAEE,SAAS;IAAEJ;EAAM,CAAC;AACrD,CAAC;AAACD,EAAA,CA3CWD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}