{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const Cart = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const addToCart = async (productId, quantity) => {\n    setIsLoading(true);\n    setError(null);\n    const token = localStorage.getItem('user').token;\n    console.log(token);\n    try {\n      const response = await fetch('http://192.168.1.145:3002/cart/add', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          product_id: productId,\n          quantity: quantity\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.errorMessage || 'Unknown server error. Please try again later.');\n      }\n      const json = await response.json();\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    addToCart,\n    isLoading,\n    error\n  };\n};\n_s(Cart, \"TdgXzm3bV5WOR6TSvW/vB2ctGng=\");\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["useState","Cart","_s","error","setError","isLoading","setIsLoading","addToCart","productId","quantity","token","localStorage","getItem","console","log","response","fetch","method","headers","body","JSON","stringify","product_id","ok","errorData","json","Error","errorMessage","message","_c","$RefreshReg$"],"sources":["/Users/lukethompson/Documents/FullStackProject/frontend/src/hooks/Cart.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const Cart = () => {\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false); \n\n    const addToCart = async (productId, quantity) => {\n        setIsLoading(true);\n        setError(null);\n        const token = localStorage.getItem('user').token;\n        console.log(token);\n        try {\n            const response = await fetch('http://192.168.1.145:3002/cart/add', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(\n                    {\n                        product_id: productId,\n                        quantity: quantity\n                    }\n                )\n                });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.errorMessage || 'Unknown server error. Please try again later.');\n            }\n\n            const json = await response.json();\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return { addToCart, isLoading, error };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMO,SAAS,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,KAAK;IAC7CH,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAACF,KAAK;IAChDG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,eAAe,EAAG,UAASR,KAAM,EAAC;UAClC,cAAc,EAAE;QACpB,CAAC;QACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAChB;UACIC,UAAU,EAAEd,SAAS;UACrBC,QAAQ,EAAEA;QACd,CACJ;MACA,CAAC,CAAC;MAEN,IAAI,CAACM,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,YAAY,IAAI,+CAA+C,CAAC;MAC9F;MAEA,MAAMF,IAAI,GAAG,MAAMV,QAAQ,CAACU,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACyB,OAAO,CAAC;IAC3B,CAAC,SAAS;MACNtB,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEC,SAAS;IAAEF,SAAS;IAAEF;EAAM,CAAC;AAC1C,CAAC;AAACD,EAAA,CAtCWD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}